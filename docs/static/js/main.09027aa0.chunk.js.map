{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAsB/BZ,EAAYe,SAAW,CACnBd,cAAee,YAAUC,KAAKC,Y,mCC9BrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EAAM,0CAA4CC,UAAUH,GAAY,qDAD3D,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAIL,GAER,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,EAAL,WCHCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAGGuB,EDZwBK,CAAa5B,GAAhCa,EAHyB,EAG9BN,KAAae,EAHiB,EAGjBA,QASpB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAAyDlB,EAAzD,OACCsB,GAAW,mBAAGJ,UAAU,wCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEgBtBkB,EApCM,WAAO,IAAD,EAEa/C,mBAAS,CAAC,cAFvB,mBAEhBgD,EAFgB,KAEJjD,EAFI,KAUvB,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAIA,6BAEQiD,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCvBjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.09027aa0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { PropTypes } from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handledSubmit = (e) => {\n        e.preventDefault()\n        if (inputValue.trim().length > 2) {\n            setCategories(cate => [inputValue, ...cate])\n            setInputValue('')\n        }\n\n    }\n    return (\n        <form onSubmit={handledSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propType = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url = 'https://api.giphy.com/v1/gifs/search?q=' + encodeURI(category) + '&limit=10&api_key=Vy280XM6dmUX7CTAS6mB7fObZzRRT9b6'\n\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n\n    return gifs;\n};\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    console.log(title)\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p> {title} </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/getGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])\n    const {data:images, loading} = useFetchGifs(category)\n\n    \n    // useEffect(() => {\n    //     getGifs(category)\n    //     // .then(imgs => setImages(imgs))        \n    //     .then(setImages)        \n    // }, [category])\n\n    return (\n        <>\n            <h3 className=\"card animate__animated animate__fadeIn\"> {category} </h3>\n            {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [category])\n\n\n    return state\n}","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\n\nconst GitExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handleAdd = () => {\n    //     // setCategories([...categories,'Goku'])\n    //     setCategories( cate => [...cate,'Goku'])\n\n    // }\n\n    return (\n        <>\n            <h2>GitExpertApp</h2>\n\n            <AddCategory setCategories={setCategories} />\n\n            <hr />\n\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n\n}\n\n\nexport default GitExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './components/GitExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}